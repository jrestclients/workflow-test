# This workflow runs tests on pull-requests but does not merge them
# To run a test, simply comment with /test

name: Run test on Pull-Request

on:
    issue_comment:
        types: [created]

jobs:
  test-pull-request:
    name: Run tests
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/test' }}

    runs-on: ubuntu-latest

    steps:
        - name: Get PR context
          id: pr-context
          uses: actions/github-script@v4.1.0
          with:
              # The json result encoding still returns a string, not a JSON object
              result-encoding: json
              script: |
                  const response = await github.pulls.get({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      pull_number: context.payload.issue.number
                  });
                  console.log(response)
                  return response

        - name: Checkout the main branch
          uses: actions/checkout@v2
          with:
              fetch-depth: 0

        - name: Fetch the pull-request
          run: git fetch origin +refs/pull/${{ github.event.issue.number }}/head:refs/remotes/origin/pr/${{ github.event.issue.number }}

        - name: Create and switch to the PR branch
          run: git switch pr/${{ github.event.issue.number }}

        - name: Fetch the destination branch
          run: git fetch origin ${{ fromJSON(steps.pr-context.outputs.result).data.base.ref }}

        - name: Create and switch to destination branch
          run: git switch ${{ fromJSON(steps.pr-context.outputs.result).data.base.ref }}

        # The git log helps debug the process
        - name: Git log
          run: |
              git log --format=format:"%C(auto)%h %C(cyan)%ar%C(auto) %d %C(green)%aN%Creset %s" --graph --all -n 10

        - name: Merge PR into destination branch
          run: |
              git config --local user.email "action@github.com"
              git config --local user.name "GitHub Action"
              git merge --no-ff -m "Merge PR ${{ github.event.issue.number }} to ${{ fromJSON(steps.pr-context.outputs.result).data.base.ref }}" pr/${{ github.event.issue.number }}

        # Showing the summary helps to see if the merge-commit was created
        # This step could be commented out or removed
        - name: Show summary
          run: git show --summary

        - name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
            java-version: '11'
            distribution: 'adopt'
            cache: 'gradle'

        - name: Grant execute permission for gradlew
          run: chmod +x gradlew

        - name: Build with Gradle
          run: ./gradlew build --console=plain --no-daemon

        - name: Publish Test Report
          uses: mikepenz/action-junit-report@v2
          if: always() # always run even if the previous step fails
          with:
              report_paths: '**/build/test-results/test/TEST-*.xml'
