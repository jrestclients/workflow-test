/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Code coverage
    id 'jacoco'
}

group = "io.github.jrestclients"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.7'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

application {
    // Define the main class for the application.
    mainClass = 'ca.martinda.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
    doLast {
        println("> Test results ${test.reports.getHtml().getEntryPoint()}")
    }

    finalizedBy jacocoTestReport
}

// Jacoco - code coverage
jacocoTestReport {
    dependsOn test
    sourceDirectories.from(["src/main/groovy"])
    doLast {
        println("> Jacoco Report: ${buildDir}/reports/jacoco")
    }
}
